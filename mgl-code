/* subr.h */

/*
 * MGL Runtime support code
 */

char *screen_init[] = {
  "/* initialization information */",
  "static int init;\n",
  "#include <curses.h>",
  "#include <sys/signal.h>",
  "#include <ctype.h>",
  "#include <stdlib.h>",
  "#include \"mglyac.tab.h\"",
  "#include \"mglhdr.h\"\n",
  "/* structure used to store menu items */",
  "struct item {",
  "  char *desc;",
  "  char *cmd;",
  "  int   action;",
  "  char *act_str;     /* execute string */",
  "  void (*act_menu)();   /* call appropriate function */",
  "  int   attribute;",
  "};\n",
  "void menu_init();",
  "void menu_runtime(struct item *items);",
  "int casecmp(char *p, char *q);\n",
  0,
};

char *menu_init[] = {
  "void menu_init()",
  "{",
  "  void menu_cleanup();\n",
  "  /*signal(SIGINT, menu_cleanup);*/",
  "  initscr();",
  "  crmode();",
  "}\n\n",
  "void menu_cleanup()",
  "{",
  "  mvcur(0, COLS - 1, LINES - 1, 0);",
  "  endwin();",
  "}\n",
  0,
};

char *menu_runtime[] = {
"/* runtime */",
"",
"void menu_runtime(struct item *items)",
"{",
"  int visible = 0;",
"  int choice = 0;",
"  struct item *ptr;",
"  char buf[BUFSIZ];",
"",
"  for(ptr = items; ptr->desc != 0; ptr++) {",
"    addch('\\n'); /* skip a line */",
"    if(ptr->attribute == VISIBLE) {",
"      visible++;",
"      printw(\"\\t%d) %s\",visible,ptr->desc);",
"    }",
"  }",
"",
"  addstr(\"\\n\\n\\t\"); /* tab out so it looks nice */",
"  refresh();",
"",
"  for(;;)",
"  {",
"    int i, nval;",
"",
"    getstr(buf);",
"",
"    /* numeric choice? */",
"    nval = atoi(buf);",
"",
"    /* command choice ? */",
"    i = 0;",
"    for(ptr = items; ptr->desc != 0; ptr++) {",
"      if(ptr->attribute != VISIBLE)",
"        continue;",
"      i++;",
"      if(nval == i)",
"        break;",
"      if(!casecmp(buf, ptr->cmd))",
"        break;",
"    }",
"",
"    if(!ptr->desc)",
"      continue;  /* no match */",
"",
"    switch(ptr->action)",
"    {",
"    case QUIT:",
"      exit(0);",
"    case IGNORE:",
"      refresh();",
"      break;",
"    case EXECUTE:",
"      refresh();",
"      system(ptr->act_str);",
"      break;",
"    case MENU:",
"      refresh();",
"      (*ptr->act_menu)();",
"      break;",
"    default:",
"      printw(\"default case, no action\\n\");",
"      refresh();",
"      break;",
"    }",
"    refresh();",
"  }",
"}",
"",
"int casecmp(char *p, char *q)",
"{",
"  int pc, qc;",
"",
"  for(; *p != 0; p++, q++) {",
"    pc = tolower(*p);",
"    qc = tolower(*q);",
"",
"    if(pc != qc)",
"      break;",
"  }",
"  return pc-qc;",
"}",
0
};
